#!/usr/bin/env bash

	IFS=" " #delimiter
	#results in syntax: pdfname.pdf:pagenumber:searchstring
	resultslist=$(pdfgrep -n -o $1 *.pdf)
	deduplicatedlist=$(echo $resultslist  | sort -u) #deduplicate
	
	pageslist=$(echo $deduplicatedlist | cut -d ':' -f 2) #page numbers
	resultpages=$(echo $deduplicatedlist | cut -d ':' -f 1 | uniq -c | awk '{print $1}') #resultpages per pdf
	echo $pagecount
	
	#determine individual pdf files:
    uniquepdfnames=$(echo $deduplicatedlist | cut -d ':' -f 1 | sort -u)
    unset IFS
    uniquepdfcount=$(echo $uniquepdfnames | wc -w)
    echo "Found X results inside $uniquepdfcount pdf files"
    
    #will result in e.g. pdfnames="A=first.pdf B=second.pdf":
    c=65 #pdftek can't work with lowercase letters. ASCII uppercase letter range: 65-90.
    i=$c
    end=$(($i+$uniquepdfcount-1))
    while [ $i -le $end ]; do #less or equals https://www.ibm.com/support/knowledgecenter/en/ssw_aix_72/osmanagement/korn_shell_conditional_exp.html
        appendchar=$(printf "\\$(printf %o $i)\n")
        pdfnames=$pdfnames$appendchar"="$(echo $uniquepdfnames | cut -d " " -f $(($i-$c+1)))" "

        i=$((i + 1))
        
    done
        
    echo $pdfnames
    pagecount=$(echo $pageslist | wc -w)
    echo "Pages: " $pagecount "("$pageslist")"
    echo "Per pdf: " $resultpages
    


    
    
	#montage "*pdf" png:- | convert - sixel:- #but keeping vectors via ghostscript
	#or like cat *pdf | convert - sixel:- but for all pdf
	#pdftk to extract pages; ghostscript to limit the display size / space; convert to sixel for terminal display:
	pdftk $pdfnames cat A1 output - \
	| gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -g2048x2048 -dPDFFitPage -sOutputFile=- - \
	| convert - sixel:-
